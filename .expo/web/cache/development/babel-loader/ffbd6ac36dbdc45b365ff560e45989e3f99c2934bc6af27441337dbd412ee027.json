{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Geolocation from \"@react-native-community/geolocation\";\nimport { useFonts } from \"expo-font\";\nimport { Montserrat_400Regular } from \"@expo-google-fonts/montserrat\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_KEY = \"fde70b7b510d418c6126c7433ab077c4\";\nvar fetchWeatherData = function () {\n  var _ref = _asyncToGenerator(function* (latitude, longitude) {\n    var url = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=\" + API_KEY + \"&units=metric\";\n    var response = yield fetch(url);\n    var data = yield response.json();\n    console.log(data);\n    return data;\n  });\n  return function fetchWeatherData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default function App() {\n  var _useFonts = useFonts({\n      \"Montserrat-Regular\": Montserrat_400Regular\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else {\n    var dateObj = new Date();\n    var dayName = dateObj.toLocaleString(\"default\", {\n      weekday: \"long\"\n    });\n    var dayNum = dateObj.getDate();\n    var month = dateObj.toLocaleString(\"default\", {\n      month: \"long\"\n    });\n    var _date = dayName + \", \" + dayNum + \" \" + month;\n    var getWeatherIcon = function getWeatherIcon(weatherCondition, hour) {\n      var weatherIcons = {\n        Clear: [require(\"./assets/ClearDay.png\"), require(\"./assets/ClearNight.png\")],\n        Clouds: require(\"./assets/Cloud.png\"),\n        Rain: require(\"./assets/Rain.png\"),\n        Wind: require(\"./assets/Wind.png\"),\n        Snow: require(\"./assets/Snow.png\"),\n        Fog: require(\"./assets/Fog.png\"),\n        Drizzle: require(\"./assets/Drizzle.png\"),\n        Tornado: require(\"./assets/Tornado.png\"),\n        Ash: require(\"./assets/DustSandAsh.png\"),\n        Dust: require(\"./assets/DustSandAsh.png\"),\n        Sand: require(\"./assets/DustSandAsh.png\"),\n        Haze: require(\"./assets/HazeMistSmoke.png\"),\n        Mist: require(\"./assets/HazeMistSmoke.png\"),\n        Smoke: require(\"./assets/HazeMistSmoke.png\"),\n        Squall: require(\"./assets/ThunderstormSquall.png\"),\n        Thunderstorm: require(\"./assets/ThunderstormSquall.png\")\n      };\n      if (Array.isArray(weatherIcons[weatherCondition])) {\n        if (hour >= 18.5 || hour <= 6) return weatherIcons[weatherCondition][1];\n        return weatherIcons[weatherCondition][0];\n      }\n      return weatherIcons[weatherCondition];\n    };\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      _data = _useState2[0],\n      setData = _useState2[1];\n    var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _weatherIcon = _useState4[0],\n      setWeatherIcon = _useState4[1];\n    useEffect(function () {\n      Geolocation.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n        fetchWeatherData(latitude, longitude).then(function (data) {\n          setData(data);\n        });\n      });\n    }, []);\n    useEffect(function () {\n      if (_data) {\n        var hour = new Date().getHours();\n        var weatherCondition = _data.weather[0].main;\n        var _weatherIcon2 = getWeatherIcon(weatherCondition, hour);\n        setWeatherIcon(_weatherIcon2);\n      }\n    }, [_data]);\n  }\n  return _jsxs(ImageBackground, {\n    style: styles.backgroundImage,\n    source: require(\"./assets/BG_Gradient.png\"),\n    children: [_jsxs(View, {\n      style: styles.searchBar,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Search City\"\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Image, {\n          source: require(\"./assets/search-loc.png\"),\n          style: styles.searchIcon\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.Datecontainer,\n      children: _jsx(Text, {\n        style: styles.DateText,\n        children: date\n      })\n    }), _jsx(View, {\n      children: data ? _jsx(View, {\n        style: styles.CurrentLocation,\n        children: _jsxs(Text, {\n          style: styles.CurrentLocationText,\n          children: [data.name, \", \", data.sys.country]\n        })\n      }) : _jsx(Text, {\n        style: styles.CurrentLocationText\n      })\n    }), _jsxs(View, {\n      style: styles.weatherImage,\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          source: weatherIcon,\n          style: {\n            width: 120,\n            height: 120\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.weatherImageText,\n        children: data ? data.weather[0].description : \"\"\n      }), _jsx(Text, {\n        style: styles.cloudCover,\n        children: data ? \"Clouds Cover: \" + data.clouds.all + \"%\" : \"\"\n      })]\n    }), _jsx(View, {\n      style: styles.temp,\n      children: _jsx(Text, {\n        style: styles.tempText,\n        children: data ? data.main.temp.toFixed(1) + \"\\xB0C\" : \"_ _\"\n      })\n    }), _jsxs(View, {\n      style: styles.grid,\n      children: [_jsxs(View, {\n        style: styles.box,\n        children: [_jsxs(View, {\n          style: styles.boxHeader,\n          children: [_jsx(Image, {\n            style: styles.boxHeaderIcon,\n            source: require(\"./assets/FeelsLike.png\")\n          }), _jsx(Text, {\n            style: styles.boxHeaderText,\n            children: \"Feels Like\"\n          })]\n        }), _jsx(Text, {\n          style: styles.BoxMainText,\n          children: data ? data.main.feels_like.toFixed(0) + \"\\xB0C\" : \"\"\n        })]\n      }), _jsxs(View, {\n        style: styles.box,\n        children: [_jsxs(View, {\n          style: styles.boxHeader,\n          children: [_jsx(Image, {\n            style: styles.boxHeaderIcon,\n            source: require(\"./assets/Wind.png\")\n          }), _jsx(Text, {\n            style: styles.boxHeaderText,\n            children: \"Wind\"\n          })]\n        }), _jsx(Text, {\n          style: styles.BoxMainText,\n          children: data ? data.wind.speed.toFixed(1) + \" m/s\" : \"\"\n        })]\n      }), _jsxs(View, {\n        style: styles.box,\n        children: [_jsxs(View, {\n          style: styles.boxHeader,\n          children: [_jsx(Image, {\n            style: styles.boxHeaderIcon,\n            source: require(\"./assets/Humidity.png\")\n          }), _jsx(Text, {\n            style: styles.boxHeaderText,\n            children: \"Humidity\"\n          })]\n        }), _jsx(Text, {\n          style: styles.BoxMainText,\n          children: data ? data.main.humidity + \"%\" : \"\"\n        })]\n      }), _jsxs(View, {\n        style: styles.box,\n        children: [_jsxs(View, {\n          style: styles.boxHeader,\n          children: [_jsx(Image, {\n            style: styles.boxHeaderIcon,\n            source: require(\"./assets/Visibility.png\")\n          }), _jsx(Text, {\n            style: styles.boxHeaderText,\n            children: \"Visibility\"\n          })]\n        }), _jsx(Text, {\n          style: styles.BoxMainText,\n          children: data ? data.visibility / 1000 + \" km\" : \"\"\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1\n  },\n  searchBar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(241, 241, 241, 0.95)\",\n    borderRadius: \"2rem\",\n    marginVertical: \"2rem\",\n    marginHorizontal: \"2rem\",\n    paddingHorizontal: \"1rem\"\n  },\n  input: {\n    flex: 1,\n    paddingVertical: \"1rem\",\n    fontFamily: \"Montserrat-Regular\",\n    fontSize: \"1rem\",\n    outlineStyle: \"none\",\n    outlineColor: \"transparent\"\n  },\n  searchIcon: {\n    width: \"1.5rem\",\n    height: \"1.5rem\"\n  },\n  Datecontainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  DateText: {\n    fontFamily: \"Montserrat-Regular\",\n    fontSize: \"1.5rem\",\n    color: \"#f1f1f1\",\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  CurrentLocation: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"0.7rem\"\n  },\n  CurrentLocationText: {\n    fontFamily: \"Montserrat-Regular\",\n    fontSize: \"1.3rem\",\n    fontVariant: [\"small-caps\"],\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\"\n  },\n  weatherImage: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"2rem\"\n  },\n  weatherImageText: {\n    fontSize: \"1.7rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    textTransform: \"capitalize\",\n    fontWeight: \"500\",\n    textAlign: \"center\"\n  },\n  cloudCover: {\n    fontSize: \"1rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    textTransform: \"capitalize\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    marginTop: \"0.5rem\"\n  },\n  temp: {\n    marginTop: \"1rem\"\n  },\n  tempText: {\n    fontSize: \"4rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#ffffff\",\n    fontWeight: \"normal\",\n    textAlign: \"center\"\n  },\n  feelLikeText: {\n    fontSize: \"1rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\"\n  },\n  grid: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: \"2rem\",\n    gap: 30\n  },\n  box: {\n    width: \"10rem\",\n    height: \"10rem\",\n    borderRadius: 10,\n    backgroundColor: \"rgba(241, 241, 241, 0.15)\"\n  },\n  boxHeader: {\n    flexDirection: \"row\",\n    gap: 10,\n    opacity: 0.8\n  },\n  boxHeaderIcon: {\n    width: \"1.75rem\",\n    height: \"1.75rem\",\n    marginLeft: \"0.5rem\",\n    marginTop: \"0.8rem\"\n  },\n  boxHeaderText: {\n    fontSize: \"1.1rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    paddingVertical: \"1rem\"\n  },\n  BoxMainText: {\n    fontSize: \"2rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"auto\",\n    paddingLeft: \"0.5rem\",\n    paddingTop: \"1rem\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","ImageBackground","StyleSheet","Text","View","Image","TextInput","TouchableOpacity","Geolocation","useFonts","Montserrat_400Regular","jsx","_jsx","jsxs","_jsxs","API_KEY","fetchWeatherData","_ref","_asyncToGenerator","latitude","longitude","url","response","fetch","data","json","console","log","_x","_x2","apply","arguments","App","_useFonts","_useFonts2","_slicedToArray","fontsLoaded","AppLoading","dateObj","Date","dayName","toLocaleString","weekday","dayNum","getDate","month","date","getWeatherIcon","weatherCondition","hour","weatherIcons","Clear","require","Clouds","Rain","Wind","Snow","Fog","Drizzle","Tornado","Ash","Dust","Sand","Haze","Mist","Smoke","Squall","Thunderstorm","Array","isArray","_useState","_useState2","setData","_useState3","_useState4","weatherIcon","setWeatherIcon","getCurrentPosition","position","_position$coords","coords","then","getHours","weather","main","style","styles","backgroundImage","source","children","searchBar","input","placeholder","searchIcon","Datecontainer","DateText","CurrentLocation","CurrentLocationText","name","sys","country","weatherImage","width","height","weatherImageText","description","cloudCover","clouds","all","temp","tempText","toFixed","grid","box","boxHeader","boxHeaderIcon","boxHeaderText","BoxMainText","feels_like","wind","speed","humidity","visibility","create","flex","flexDirection","alignItems","backgroundColor","borderRadius","marginVertical","marginHorizontal","paddingHorizontal","paddingVertical","fontFamily","fontSize","outlineStyle","outlineColor","justifyContent","color","fontStyle","fontWeight","textAlign","paddingTop","fontVariant","textTransform","marginTop","feelLikeText","flexWrap","gap","opacity","marginLeft","paddingLeft"],"sources":["F:/Weather-App/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ImageBackground,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport Geolocation from \"@react-native-community/geolocation\";\nimport { useFonts } from \"expo-font\";\nimport { Montserrat_400Regular } from \"@expo-google-fonts/montserrat\";\n\nconst API_KEY = \"fde70b7b510d418c6126c7433ab077c4\"; // API KEY FROM OPENWEATHERMAP\n\n//FETCHING DATA FROM OPENWEATHERMAP API\n\nconst fetchWeatherData = async (latitude, longitude) => {\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n  const response = await fetch(url);\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n// FETCHING DATA ENDS\n\n// Fetching Day, Month and Date from Date Object\n\nexport default function App() {\n  let [fontsLoaded] = useFonts({\n    \"Montserrat-Regular\": Montserrat_400Regular,\n  });\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    const dateObj = new Date();\n    const dayName = dateObj.toLocaleString(\"default\", { weekday: \"long\" });\n    const dayNum = dateObj.getDate();\n    const month = dateObj.toLocaleString(\"default\", { month: \"long\" });\n    const date = `${dayName}, ${dayNum} ${month}`;\n\n    // Fetching Day, Month and Date from Date Object ENDS\n\n    // GETTING WEATHER ICONS\n\n    const getWeatherIcon = (weatherCondition, hour) => {\n      const weatherIcons = {\n        Clear: [\n          require(\"./assets/ClearDay.png\"),\n          require(\"./assets/ClearNight.png\"),\n        ],\n        Clouds: require(\"./assets/Cloud.png\"),\n        Rain: require(\"./assets/Rain.png\"),\n        Wind: require(\"./assets/Wind.png\"),\n        Snow: require(\"./assets/Snow.png\"),\n        Fog: require(\"./assets/Fog.png\"),\n        Drizzle: require(\"./assets/Drizzle.png\"),\n        Tornado: require(\"./assets/Tornado.png\"),\n        Ash: require(\"./assets/DustSandAsh.png\"),\n        Dust: require(\"./assets/DustSandAsh.png\"),\n        Sand: require(\"./assets/DustSandAsh.png\"),\n        Haze: require(\"./assets/HazeMistSmoke.png\"),\n        Mist: require(\"./assets/HazeMistSmoke.png\"),\n        Smoke: require(\"./assets/HazeMistSmoke.png\"),\n        Squall: require(\"./assets/ThunderstormSquall.png\"),\n        Thunderstorm: require(\"./assets/ThunderstormSquall.png\"),\n      };\n\n      if (Array.isArray(weatherIcons[weatherCondition])) {\n        if (hour >= 18.5 || hour <= 6) return weatherIcons[weatherCondition][1];\n        return weatherIcons[weatherCondition][0];\n      }\n      return weatherIcons[weatherCondition];\n    };\n\n    // GETTING WEATHER ICONS ENDS\n\n    //Fetching location\n\n    const [data, setData] = useState(null);\n    const [weatherIcon, setWeatherIcon] = useState(null);\n\n    useEffect(() => {\n      Geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        fetchWeatherData(latitude, longitude).then((data) => {\n          setData(data);\n        });\n      });\n    }, []);\n\n    //Fetching location ENDS\n\n    //Fetching Weather data\n\n    useEffect(() => {\n      if (data) {\n        const hour = new Date().getHours();\n        const weatherCondition = data.weather[0].main;\n        const weatherIcon = getWeatherIcon(weatherCondition, hour);\n        setWeatherIcon(weatherIcon);\n      }\n    }, [data]);\n\n    //Fetching Weather data ENDS\n\n    // RENDER STARTS\n  }\n  return (\n    <ImageBackground\n      style={styles.backgroundImage}\n      source={require(\"./assets/BG_Gradient.png\")}\n    >\n      <View style={styles.searchBar}>\n        <TextInput style={styles.input} placeholder=\"Search City\" />\n        <TouchableOpacity>\n          <Image\n            source={require(\"./assets/search-loc.png\")}\n            style={styles.searchIcon}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.Datecontainer}>\n        <Text style={styles.DateText}>{date}</Text>\n      </View>\n      <View>\n        {data ? (\n          <View style={styles.CurrentLocation}>\n            <Text style={styles.CurrentLocationText}>\n              {data.name}, {data.sys.country}\n            </Text>\n          </View>\n        ) : (\n          <Text style={styles.CurrentLocationText}></Text>\n        )}\n      </View>\n      <View style={styles.weatherImage}>\n        <View>\n          <Image source={weatherIcon} style={{ width: 120, height: 120 }} />\n        </View>\n        <Text style={styles.weatherImageText}>\n          {data ? data.weather[0].description : \"\"}\n        </Text>\n        <Text style={styles.cloudCover}>\n          {data ? `Clouds Cover: ${data.clouds.all}%` : \"\"}\n        </Text>\n      </View>\n      <View style={styles.temp}>\n        <Text style={styles.tempText}>\n          {data ? `${data.main.temp.toFixed(1)}°C` : \"_ _\"}\n        </Text>\n      </View>\n\n      <View style={styles.grid}>\n        {/*Feels Like */}\n\n        <View style={styles.box}>\n          <View style={styles.boxHeader}>\n            <Image\n              style={styles.boxHeaderIcon}\n              source={require(\"./assets/FeelsLike.png\")}\n            />\n            <Text style={styles.boxHeaderText}>Feels Like</Text>\n          </View>\n          <Text style={styles.BoxMainText}>\n            {data ? `${data.main.feels_like.toFixed(0)}°C` : \"\"}\n          </Text>\n        </View>\n        {/* Wind */}\n\n        <View style={styles.box}>\n          <View style={styles.boxHeader}>\n            <Image\n              style={styles.boxHeaderIcon}\n              source={require(\"./assets/Wind.png\")}\n            />\n            <Text style={styles.boxHeaderText}>Wind</Text>\n          </View>\n          <Text style={styles.BoxMainText}>\n            {data ? `${data.wind.speed.toFixed(1)} m/s` : \"\"}\n          </Text>\n        </View>\n\n        {/* Humidity */}\n\n        <View style={styles.box}>\n          <View style={styles.boxHeader}>\n            <Image\n              style={styles.boxHeaderIcon}\n              source={require(\"./assets/Humidity.png\")}\n            />\n            <Text style={styles.boxHeaderText}>Humidity</Text>\n          </View>\n          <Text style={styles.BoxMainText}>\n            {data ? `${data.main.humidity}%` : \"\"}\n          </Text>\n        </View>\n\n        {/* Visibility */}\n\n        <View style={styles.box}>\n          <View style={styles.boxHeader}>\n            <Image\n              style={styles.boxHeaderIcon}\n              source={require(\"./assets/Visibility.png\")}\n            />\n            <Text style={styles.boxHeaderText}>Visibility</Text>\n          </View>\n          <Text style={styles.BoxMainText}>\n            {data ? `${data.visibility / 1000} km` : \"\"}\n          </Text>\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\n// RENDER ENDS\n\n// STYLESHEET STARTS\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n  },\n\n  searchBar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(241, 241, 241, 0.95)\",\n    borderRadius: \"2rem\",\n    marginVertical: \"2rem\",\n    marginHorizontal: \"2rem\",\n    paddingHorizontal: \"1rem\",\n  },\n\n  input: {\n    flex: 1,\n    paddingVertical: \"1rem\",\n    fontFamily: \"Montserrat-Regular\",\n    fontSize: \"1rem\",\n    outlineStyle: \"none\",\n    outlineColor: \"transparent\",\n  },\n\n  searchIcon: {\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n  },\n\n  Datecontainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  DateText: {\n    fontFamily: \"Montserrat-Regular\",\n    fontSize: \"1.5rem\",\n    color: \"#f1f1f1\",\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n\n  CurrentLocation: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"0.7rem\",\n  },\n\n  CurrentLocationText: {\n    fontFamily: \"Montserrat-Regular\",\n    fontSize: \"1.3rem\",\n    fontVariant: [\"small-caps\"],\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  weatherImage: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"2rem\",\n  },\n\n  weatherImageText: {\n    fontSize: \"1.7rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    textTransform: \"capitalize\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  cloudCover: {\n    fontSize: \"1rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    textTransform: \"capitalize\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    marginTop: \"0.5rem\",\n  },\n\n  temp: {\n    marginTop: \"1rem\",\n  },\n\n  tempText: {\n    fontSize: \"4rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#ffffff\",\n    fontWeight: \"normal\",\n    textAlign: \"center\",\n  },\n\n  feelLikeText: {\n    fontSize: \"1rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  grid: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: \"2rem\",\n    gap: 30,\n  },\n\n  box: {\n    width: \"10rem\",\n    height: \"10rem\",\n    borderRadius: 10,\n    backgroundColor: \"rgba(241, 241, 241, 0.15)\",\n  },\n\n  boxHeader: {\n    flexDirection: \"row\",\n    gap: 10,\n    opacity: 0.8,\n  },\n\n  boxHeaderIcon: {\n    width: \"1.75rem\",\n    height: \"1.75rem\",\n    marginLeft: \"0.5rem\",\n    marginTop: \"0.8rem\",\n  },\n\n  boxHeaderText: {\n    fontSize: \"1.1rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    paddingVertical: \"1rem\",\n  },\n\n  BoxMainText: {\n    fontSize: \"2rem\",\n    fontFamily: \"Montserrat-Regular\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"auto\",\n    paddingLeft: \"0.5rem\",\n    paddingTop: \"1rem\",\n  },\n});\n\n// STYLESHEET ENDS\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}