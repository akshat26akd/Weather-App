{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Geolocation from \"@react-native-community/geolocation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_KEY = \"fde70b7b510d418c6126c7433ab077c4\";\nvar fetchWeatherData = function () {\n  var _ref = _asyncToGenerator(function* (latitude, longitude) {\n    var url = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=\" + API_KEY + \"&units=metric\";\n    var response = yield fetch(url);\n    var data = yield response.json();\n    console.log(data);\n    return data;\n  });\n  return function fetchWeatherData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar fetchWeatherDataByCityName = function () {\n  var _ref2 = _asyncToGenerator(function* (cityName) {\n    var apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\" + cityName + \"&appid=\" + API_KEY + \"&units=metric\";\n    try {\n      var response = yield fetch(apiUrl);\n      var data = yield response.json();\n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return function fetchWeatherDataByCityName(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar _useState = useState(\"\"),\n  _useState2 = _slicedToArray(_useState, 2),\n  city = _useState2[0],\n  setCity = _useState2[1];\nvar _useState3 = useState(null),\n  _useState4 = _slicedToArray(_useState3, 2),\n  weatherData = _useState4[0],\n  setWeatherData = _useState4[1];\nvar _useState5 = useState(null),\n  _useState6 = _slicedToArray(_useState5, 2),\n  error = _useState6[0],\n  setError = _useState6[1];\nvar handleSearch = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    if (city) {\n      var data = yield fetchWeatherDataByCityName(city);\n      if (data.cod === 200) {\n        setWeatherData(data);\n        setError(null);\n      } else {\n        setError(data.message);\n        setWeatherData(null);\n      }\n    } else {\n      setError('Please enter a city name');\n      setWeatherData(null);\n    }\n  });\n  return function handleSearch() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport default function App() {\n  var dateObj = new Date();\n  var dayName = dateObj.toLocaleString(\"default\", {\n    weekday: \"long\"\n  });\n  var dayNum = dateObj.getDate();\n  var month = dateObj.toLocaleString(\"default\", {\n    month: \"long\"\n  });\n  var date = dayName + \", \" + dayNum + \" \" + month;\n  var getWeatherIcon = function getWeatherIcon(weatherCondition, hour) {\n    var weatherIcons = {\n      Clear: [require(\"./assets/ClearDay.png\"), require(\"./assets/ClearNight.png\")],\n      Clouds: require(\"./assets/Cloudy.png\"),\n      Rain: require(\"./assets/Rainy.png\"),\n      Windy: require(\"./assets/Windy.png\"),\n      Snow: require(\"./assets/Snowy.png\")\n    };\n    if (Array.isArray(weatherIcons[weatherCondition])) {\n      if (hour >= 18 || hour <= 6) return weatherIcons[weatherCondition][1];\n      return weatherIcons[weatherCondition][0];\n    }\n    return weatherIcons[weatherCondition];\n  };\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    data = _useState8[0],\n    setData = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    weatherIcon = _useState10[0],\n    setWeatherIcon = _useState10[1];\n  useEffect(function () {\n    Geolocation.getCurrentPosition(function (position) {\n      var _position$coords = position.coords,\n        latitude = _position$coords.latitude,\n        longitude = _position$coords.longitude;\n      fetchWeatherData(latitude, longitude).then(function (data) {\n        setData(data);\n      });\n    });\n  }, []);\n  useEffect(function () {\n    if (data) {\n      var hour = new Date().getHours();\n      var weatherCondition = data.weather[0].main;\n      var _weatherIcon = getWeatherIcon(weatherCondition, hour);\n      setWeatherIcon(_weatherIcon);\n    }\n  }, [data]);\n  return _jsxs(ImageBackground, {\n    style: styles.backgroundImage,\n    source: require(\"./assets/BG_Gradient.png\"),\n    children: [_jsxs(View, {\n      style: styles.searchBar,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Search City\",\n        onChangeText: function onChangeText(text) {\n          return setCity(text);\n        },\n        value: city\n      }), error && _jsx(Text, {\n        children: error\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSearch,\n        children: _jsx(Image, {\n          source: require(\"./assets/search-loc.png\"),\n          style: styles.searchIcon\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.Datecontainer,\n      children: _jsx(Text, {\n        style: styles.DateText,\n        children: date\n      })\n    }), _jsx(View, {\n      children: data ? _jsx(View, {\n        style: styles.CurrentLocation,\n        children: _jsxs(Text, {\n          style: styles.CurrentLocationText,\n          children: [data.name, \", \", data.sys.country]\n        })\n      }) : _jsx(Text, {\n        style: styles.CurrentLocationText\n      })\n    }), _jsxs(View, {\n      style: styles.weatherImage,\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          source: weatherIcon,\n          style: {\n            width: \"8rem\",\n            height: \"8rem\"\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.weatherImageText,\n        children: data ? data.weather[0].description : \"\"\n      })]\n    }), _jsx(View, {\n      style: styles.temp,\n      children: _jsx(Text, {\n        style: styles.tempText,\n        children: data ? data.main.temp.toFixed(1) + \"\\xB0C\" : \"- -\"\n      })\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        style: styles.feelLikeText,\n        children: data ? \"Feels Like: \" + data.main.feels_like.toFixed(0) + \"\\xB0C\" : \"\"\n      })\n    }), _jsxs(View, {\n      style: styles.grid,\n      children: [_jsxs(View, {\n        style: styles.box,\n        children: [_jsxs(View, {\n          style: styles.boxHeader,\n          children: [_jsx(Image, {\n            style: styles.boxHeaderIcon,\n            source: require(\"./assets/Windy.png\")\n          }), _jsx(Text, {\n            style: styles.boxHeaderText,\n            children: \"Wind\"\n          })]\n        }), _jsx(Text, {\n          style: styles.BoxMainText,\n          children: data ? data.wind.speed.toFixed(1) + \" m/s\" : \"\"\n        })]\n      }), _jsxs(View, {\n        style: styles.box,\n        children: [_jsxs(View, {\n          style: styles.boxHeader,\n          children: [_jsx(Image, {\n            style: styles.boxHeaderIcon,\n            source: require(\"./assets/Humidity.png\")\n          }), _jsx(Text, {\n            style: styles.boxHeaderText,\n            children: \"Humidity\"\n          })]\n        }), _jsx(Text, {\n          style: styles.BoxMainText,\n          children: data ? data.main.humidity + \"%\" : \"\"\n        })]\n      }), _jsxs(View, {\n        style: styles.box,\n        children: [_jsxs(View, {\n          style: styles.boxHeader,\n          children: [_jsx(Image, {\n            style: styles.boxHeaderIcon,\n            source: require(\"./assets/Pressure.png\")\n          }), _jsx(Text, {\n            style: styles.boxHeaderText,\n            children: \"Pressure\"\n          })]\n        }), _jsx(Text, {\n          style: styles.BoxMainText,\n          children: data ? data.main.pressure + \" hPa\" : \"\"\n        })]\n      }), _jsxs(View, {\n        style: styles.box,\n        children: [_jsxs(View, {\n          style: styles.boxHeader,\n          children: [_jsx(Image, {\n            style: styles.boxHeaderIcon,\n            source: require(\"./assets/Visibility.png\")\n          }), _jsx(Text, {\n            style: styles.boxHeaderText,\n            children: \"Visibility\"\n          })]\n        }), _jsx(Text, {\n          style: styles.BoxMainText,\n          children: data ? data.visibility / 1000 + \" km\" : \"\"\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1\n  },\n  searchBar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(241, 241, 241, 0.95)\",\n    borderRadius: \"2rem\",\n    marginVertical: \"2rem\",\n    marginHorizontal: \"2rem\",\n    paddingHorizontal: \"1rem\"\n  },\n  input: {\n    flex: 1,\n    paddingVertical: \"1rem\",\n    fontFamily: \"Montserrat\",\n    fontSize: \"1rem\",\n    outlineStyle: \"none\"\n  },\n  searchIcon: {\n    width: \"1.5rem\",\n    height: \"1.5rem\"\n  },\n  Datecontainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  DateText: {\n    fontFamily: \"Montserrat\",\n    fontSize: \"1.75rem\",\n    color: \"#f1f1f1\",\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  CurrentLocation: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"0.7rem\"\n  },\n  CurrentLocationText: {\n    fontFamily: \"Montserrat\",\n    fontSize: \"1.5rem\",\n    fontVariant: [\"small-caps\"],\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\"\n  },\n  weatherImage: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"1.5rem\"\n  },\n  weatherImageText: {\n    fontSize: \"1.5rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    textTransform: \"capitalize\",\n    fontWeight: \"500\",\n    textAlign: \"center\"\n  },\n  temp: {\n    marginTop: \"1rem\"\n  },\n  tempText: {\n    fontSize: \"4rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"normal\",\n    textAlign: \"center\"\n  },\n  feelLikeText: {\n    fontSize: \"1rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\"\n  },\n  grid: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: \"2rem\",\n    gap: 30\n  },\n  box: {\n    width: \"10rem\",\n    height: \"10rem\",\n    borderRadius: 10,\n    backgroundColor: \"rgba(241, 241, 241, 0.15)\"\n  },\n  boxHeader: {\n    flexDirection: \"row\",\n    gap: 10,\n    opacity: 0.8\n  },\n  boxHeaderIcon: {\n    width: \"1.75rem\",\n    height: \"1.75rem\",\n    marginLeft: \"0.5rem\",\n    marginTop: \"0.8rem\"\n  },\n  boxHeaderText: {\n    fontSize: \"1.1rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    paddingVertical: \"1rem\"\n  },\n  BoxMainText: {\n    fontSize: \"2rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"auto\",\n    paddingLeft: \"0.5rem\",\n    paddingTop: \"1rem\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","ImageBackground","StyleSheet","Text","View","Image","TextInput","TouchableOpacity","Geolocation","jsx","_jsx","jsxs","_jsxs","API_KEY","fetchWeatherData","_ref","_asyncToGenerator","latitude","longitude","url","response","fetch","data","json","console","log","_x","_x2","apply","arguments","fetchWeatherDataByCityName","_ref2","cityName","apiUrl","error","_x3","_useState","_useState2","_slicedToArray","city","setCity","_useState3","_useState4","weatherData","setWeatherData","_useState5","_useState6","setError","handleSearch","_ref3","cod","message","App","dateObj","Date","dayName","toLocaleString","weekday","dayNum","getDate","month","date","getWeatherIcon","weatherCondition","hour","weatherIcons","Clear","require","Clouds","Rain","Windy","Snow","Array","isArray","_useState7","_useState8","setData","_useState9","_useState10","weatherIcon","setWeatherIcon","getCurrentPosition","position","_position$coords","coords","then","getHours","weather","main","style","styles","backgroundImage","source","children","searchBar","input","placeholder","onChangeText","text","value","onPress","searchIcon","Datecontainer","DateText","CurrentLocation","CurrentLocationText","name","sys","country","weatherImage","width","height","weatherImageText","description","temp","tempText","toFixed","feelLikeText","feels_like","grid","box","boxHeader","boxHeaderIcon","boxHeaderText","BoxMainText","wind","speed","humidity","pressure","visibility","create","flex","flexDirection","alignItems","backgroundColor","borderRadius","marginVertical","marginHorizontal","paddingHorizontal","paddingVertical","fontFamily","fontSize","outlineStyle","justifyContent","color","fontStyle","fontWeight","textAlign","paddingTop","fontVariant","textTransform","marginTop","flexWrap","gap","opacity","marginLeft","paddingLeft"],"sources":["F:/Weather-App/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ImageBackground,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport Geolocation from \"@react-native-community/geolocation\";\n\nconst API_KEY = \"fde70b7b510d418c6126c7433ab077c4\"; // API KEY FROM OPENWEATHERMAP\n\n//FETCHING DATA FROM OPENWEATHERMAP API\n\nconst fetchWeatherData = async (latitude, longitude) => {\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n  const response = await fetch(url);\n  const data = await response.json();\n  console.log(data);\n  return data;\n};\n// FETCHING DATA ENDS\n\nconst fetchWeatherDataByCityName = async (cityName) => {\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}&units=metric`;\n\n  try {\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nconst [city, setCity] = useState(\"\");\nconst [weatherData, setWeatherData] = useState(null);\nconst [error, setError] = useState(null);\n\nconst handleSearch = async () => {\n  if (city) {\n    const data = await fetchWeatherDataByCityName(city);\n    if (data.cod === 200) {\n      setWeatherData(data);\n      setError(null);\n    } else {\n      setError(data.message);\n      setWeatherData(null);\n    }\n  } else {\n    setError('Please enter a city name');\n    setWeatherData(null);\n  }\n};\n\n// Fetching Day, Month and Date from Date Object\n\nexport default function App() {\n  const dateObj = new Date();\n  const dayName = dateObj.toLocaleString(\"default\", { weekday: \"long\" });\n  const dayNum = dateObj.getDate();\n  const month = dateObj.toLocaleString(\"default\", { month: \"long\" });\n  const date = `${dayName}, ${dayNum} ${month}`;\n\n  // Fetching Day, Month and Date from Date Object ENDS\n\n  // GETTING WEATHER ICONS\n\n  const getWeatherIcon = (weatherCondition, hour) => {\n    const weatherIcons = {\n      Clear: [\n        require(\"./assets/ClearDay.png\"),\n        require(\"./assets/ClearNight.png\"),\n      ],\n      Clouds: require(\"./assets/Cloudy.png\"),\n      Rain: require(\"./assets/Rainy.png\"),\n      Windy: require(\"./assets/Windy.png\"),\n      Snow: require(\"./assets/Snowy.png\"),\n    };\n\n    if (Array.isArray(weatherIcons[weatherCondition])) {\n      if (hour >= 18 || hour <= 6) return weatherIcons[weatherCondition][1];\n      return weatherIcons[weatherCondition][0];\n    }\n    return weatherIcons[weatherCondition];\n  };\n\n  // GETTING WEATHER ICONS ENDS\n\n  //Fetching location\n\n  const [data, setData] = useState(null);\n  const [weatherIcon, setWeatherIcon] = useState(null);\n\n  useEffect(() => {\n    Geolocation.getCurrentPosition((position) => {\n      const { latitude, longitude } = position.coords;\n      fetchWeatherData(latitude, longitude).then((data) => {\n        setData(data);\n      });\n    });\n  }, []);\n\n  //Fetching location ENDS\n\n  //Fetching Weather data\n\n  useEffect(() => {\n    if (data) {\n      const hour = new Date().getHours();\n      const weatherCondition = data.weather[0].main;\n      const weatherIcon = getWeatherIcon(weatherCondition, hour);\n      setWeatherIcon(weatherIcon);\n    }\n  }, [data]);\n\n  //Fetching Weather data ENDS\n\n  // RENDER STARTS\n\n  // onPress={handleSearch}\n\n  return (\n    <ImageBackground\n      style={styles.backgroundImage}\n      source={require(\"./assets/BG_Gradient.png\")}\n    >\n      <View style={styles.searchBar}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Search City\"\n          onChangeText={(text) => setCity(text)}\n          value={city}\n        />\n        {error && <Text>{error}</Text>}\n        <TouchableOpacity onPress={handleSearch}>\n          <Image\n            source={require(\"./assets/search-loc.png\")}\n            style={styles.searchIcon}\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.Datecontainer}>\n        <Text style={styles.DateText}>{date}</Text>\n      </View>\n      <View>\n        {data ? (\n          <View style={styles.CurrentLocation}>\n            <Text style={styles.CurrentLocationText}>\n              {data.name}, {data.sys.country}\n            </Text>\n          </View>\n        ) : (\n          <Text style={styles.CurrentLocationText}></Text>\n        )}\n      </View>\n      <View style={styles.weatherImage}>\n        <View>\n          <Image\n            source={weatherIcon}\n            style={{ width: \"8rem\", height: \"8rem\" }}\n          />\n        </View>\n        <Text style={styles.weatherImageText}>\n          {data ? data.weather[0].description : \"\"}\n        </Text>\n      </View>\n      <View style={styles.temp}>\n        <Text style={styles.tempText}>\n          {data ? `${data.main.temp.toFixed(1)}°C` : \"- -\"}\n        </Text>\n      </View>\n      <View>\n        <Text style={styles.feelLikeText}>\n          {data ? `Feels Like: ${data.main.feels_like.toFixed(0)}°C` : \"\"}\n        </Text>\n      </View>\n\n      <View style={styles.grid}>\n        {/* Wind */}\n\n        <View style={styles.box}>\n          <View style={styles.boxHeader}>\n            <Image\n              style={styles.boxHeaderIcon}\n              source={require(\"./assets/Windy.png\")}\n            />\n            <Text style={styles.boxHeaderText}>Wind</Text>\n          </View>\n          <Text style={styles.BoxMainText}>\n            {data ? `${data.wind.speed.toFixed(1)} m/s` : \"\"}\n          </Text>\n        </View>\n\n        {/* Humidity */}\n\n        <View style={styles.box}>\n          <View style={styles.boxHeader}>\n            <Image\n              style={styles.boxHeaderIcon}\n              source={require(\"./assets/Humidity.png\")}\n            />\n            <Text style={styles.boxHeaderText}>Humidity</Text>\n          </View>\n          <Text style={styles.BoxMainText}>\n            {data ? `${data.main.humidity}%` : \"\"}\n          </Text>\n        </View>\n\n        {/* Pressure */}\n\n        <View style={styles.box}>\n          <View style={styles.boxHeader}>\n            <Image\n              style={styles.boxHeaderIcon}\n              source={require(\"./assets/Pressure.png\")}\n            />\n            <Text style={styles.boxHeaderText}>Pressure</Text>\n          </View>\n          <Text style={styles.BoxMainText}>\n            {data ? `${data.main.pressure} hPa` : \"\"}\n          </Text>\n        </View>\n\n        {/* Visibility */}\n\n        <View style={styles.box}>\n          <View style={styles.boxHeader}>\n            <Image\n              style={styles.boxHeaderIcon}\n              source={require(\"./assets/Visibility.png\")}\n            />\n            <Text style={styles.boxHeaderText}>Visibility</Text>\n          </View>\n          <Text style={styles.BoxMainText}>\n            {data ? `${data.visibility / 1000} km` : \"\"}\n          </Text>\n        </View>\n      </View>\n    </ImageBackground>\n  );\n}\n\n// RENDER ENDS\n\n// STYLESHEET STARTS\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n  },\n\n  searchBar: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(241, 241, 241, 0.95)\",\n    borderRadius: \"2rem\",\n    marginVertical: \"2rem\",\n    marginHorizontal: \"2rem\",\n    paddingHorizontal: \"1rem\",\n  },\n\n  input: {\n    flex: 1,\n    paddingVertical: \"1rem\",\n    fontFamily: \"Montserrat\",\n    fontSize: \"1rem\",\n    outlineStyle: \"none\",\n  },\n\n  searchIcon: {\n    width: \"1.5rem\",\n    height: \"1.5rem\",\n  },\n\n  Datecontainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  DateText: {\n    fontFamily: \"Montserrat\",\n    fontSize: \"1.75rem\",\n    color: \"#f1f1f1\",\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n\n  CurrentLocation: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"0.7rem\",\n  },\n\n  CurrentLocationText: {\n    fontFamily: \"Montserrat\",\n    fontSize: \"1.5rem\",\n    fontVariant: [\"small-caps\"],\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  weatherImage: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"1.5rem\",\n  },\n\n  weatherImageText: {\n    fontSize: \"1.5rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    textTransform: \"capitalize\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  temp: {\n    marginTop: \"1rem\",\n  },\n\n  tempText: {\n    fontSize: \"4rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"normal\",\n    textAlign: \"center\",\n  },\n\n  feelLikeText: {\n    fontSize: \"1rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  grid: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: \"2rem\",\n    gap: 30,\n  },\n\n  box: {\n    width: \"10rem\",\n    height: \"10rem\",\n    borderRadius: 10,\n    backgroundColor: \"rgba(241, 241, 241, 0.15)\",\n  },\n\n  boxHeader: {\n    flexDirection: \"row\",\n    gap: 10,\n    opacity: 0.8,\n  },\n\n  boxHeaderIcon: {\n    width: \"1.75rem\",\n    height: \"1.75rem\",\n    marginLeft: \"0.5rem\",\n    marginTop: \"0.8rem\",\n  },\n\n  boxHeaderText: {\n    fontSize: \"1.1rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    paddingVertical: \"1rem\",\n  },\n\n  BoxMainText: {\n    fontSize: \"2rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"auto\",\n    paddingLeft: \"0.5rem\",\n    paddingTop: \"1rem\",\n  },\n});\n\n// STYLESHEET ENDS\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}