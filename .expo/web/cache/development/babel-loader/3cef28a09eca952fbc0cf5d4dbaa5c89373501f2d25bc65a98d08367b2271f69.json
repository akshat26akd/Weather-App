{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport axios from \"axios\";\nimport Geolocation from \"@react-native-community/geolocation\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var fetchWeatherData = function () {\n    var _ref = _asyncToGenerator(function* (latitude, longitude) {\n      var url = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=\" + API_KEY + \"&units=metric\";\n      var response = yield fetch(url);\n      var data = yield response.json();\n      console.log(data);\n      var weather = data.weather[0].main;\n      return weather;\n    });\n    return function fetchWeatherData(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentDay = _useState2[0],\n    setCurrentDay = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentDate = _useState4[0],\n    setCurrentDate = _useState4[1];\n  useEffect(function () {\n    var interval = setInterval(function () {\n      var dateObj = new Date();\n      setCurrentDay(dateObj.toLocaleDateString(\"en-US\", {\n        weekday: \"long\"\n      }));\n      var month = dateObj.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n      var day = dateObj.getDate();\n      setCurrentDate(day + \" \" + month);\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  var API_KEY = \"fde70b7b510d418c6126c7433ab077c4\";\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    weatherData = _useState6[0],\n    setWeatherData = _useState6[1];\n  useEffect(function () {\n    Geolocation.getCurrentPosition(function (position) {\n      var _position$coords = position.coords,\n        latitude = _position$coords.latitude,\n        longitude = _position$coords.longitude;\n      var URL = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=\" + API_KEY;\n      axios.get(URL).then(function (response) {\n        setWeatherData(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }, function (error) {\n      console.log(error);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 20000,\n      maximumAge: 1000\n    });\n  }, []);\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    weather = _useState8[0],\n    setWeather = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    weatherIcon = _useState10[0],\n    setWeatherIcon = _useState10[1];\n  useEffect(function () {\n    var dateObj = new Date();\n    var hour = dateObj.getHours();\n    var getWeather = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var data = yield fetchWeatherData();\n        setWeather(data);\n      });\n      return function getWeather() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getWeather();\n    setWeatherIcon(getWeatherIcon(weather, hour));\n  }, []);\n  function getWeatherIcon(weather, hour) {\n    var weatherIcons = {\n      Clouds: [require(\"./assets/Sunny.png\"), require(\"./assets/ClearNight.png\")],\n      Rain: require(\"./assets/Rainy.png\"),\n      Windy: require(\"./assets/Windy.png\"),\n      Snow: require(\"./assets/Snowy.png\")\n    };\n    if (Array.isArray(weatherIcons[weather])) {\n      if (hour >= 18 || hour <= 6) return weatherIcons[weather][1];\n      return weatherIcons[weather][0];\n    }\n    return weatherIcons[weather];\n  }\n  var getLocation = function getLocation() {\n    return new Promise(function (resolve, reject) {\n      Geolocation.getCurrentPosition(function (position) {\n        var _position$coords2 = position.coords,\n          latitude = _position$coords2.latitude,\n          longitude = _position$coords2.longitude;\n        resolve({\n          latitude: latitude,\n          longitude: longitude\n        });\n      }, function (error) {\n        reject(error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 15000,\n        maximumAge: 10000\n      });\n    });\n  };\n  useEffect(function () {\n    var getWeather = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var _yield$getLocation = yield getLocation(),\n            latitude = _yield$getLocation.latitude,\n            longitude = _yield$getLocation.longitude;\n          var data = yield fetchWeatherData(latitude, longitude);\n          setWeather(data);\n        } catch (error) {\n          console.error(error);\n        }\n      });\n      return function getWeather() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    getWeather();\n  }, []);\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    temperature = _useState12[0],\n    setTemperature = _useState12[1];\n  useEffect(function () {\n    navigator.geolocation.getCurrentPosition(function () {\n      var _ref4 = _asyncToGenerator(function* (position) {\n        var _position$coords3 = position.coords,\n          latitude = _position$coords3.latitude,\n          longitude = _position$coords3.longitude;\n        var url = \"https://api.openweathermap.org/data/2.5/weather?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=\" + API_KEY + \"&units=metric\";\n        var response = yield fetch(url);\n        var data = yield response.json();\n        setTemperature(data.main.temp);\n      });\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  }, []);\n  return _jsxs(ImageBackground, {\n    style: styles.backgroundImage,\n    source: require(\"./assets/BG_Gradient.png\"),\n    children: [_jsx(View, {\n      style: styles.Datecontainer,\n      children: _jsx(Text, {\n        children: _jsxs(Text, {\n          style: styles.DateText,\n          children: [currentDay, \", \", currentDate]\n        })\n      })\n    }), _jsx(View, {\n      children: weatherData ? _jsx(View, {\n        style: styles.CurrentLocation,\n        children: _jsx(Text, {\n          style: styles.CurrentLocationText,\n          children: weatherData.name\n        })\n      }) : _jsx(Text, {\n        style: styles.CurrentLocationText,\n        children: \"Loading...\"\n      })\n    }), _jsxs(View, {\n      style: styles.weatherImage,\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          source: weatherIcon,\n          style: {\n            width: 150,\n            height: 150\n          }\n        })\n      }), _jsxs(Text, {\n        style: styles.weatherImageText,\n        children: [\" \", weather]\n      })]\n    }), _jsx(View, {\n      style: styles.temp,\n      children: _jsx(Text, {\n        style: styles.tempText,\n        children: temperature ? temperature + \"\\xB0C\" : \"Loading...\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1\n  },\n  Datecontainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"7rem\"\n  },\n  DateText: {\n    fontFamily: \"Montserrat\",\n    fontSize: \"1.75rem\",\n    color: \"#f1f1f1\",\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  CurrentLocation: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"1rem\"\n  },\n  CurrentLocationText: {\n    fontFamily: \"Montserrat\",\n    fontSize: \"1.5rem\",\n    fontVariant: [\"small-caps\"],\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\"\n  },\n  weatherImage: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"2rem\"\n  },\n  weatherImageText: {\n    fontSize: \"1.5rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    paddingTop: \"1rem\"\n  },\n  temp: {\n    marginTop: \"1rem\"\n  },\n  tempText: {\n    fontSize: \"4rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"100\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","ImageBackground","StyleSheet","Text","View","Image","axios","Geolocation","jsxs","_jsxs","jsx","_jsx","App","fetchWeatherData","_ref","_asyncToGenerator","latitude","longitude","url","API_KEY","response","fetch","data","json","console","log","weather","main","_x","_x2","apply","arguments","_useState","_useState2","_slicedToArray","currentDay","setCurrentDay","_useState3","_useState4","currentDate","setCurrentDate","interval","setInterval","dateObj","Date","toLocaleDateString","weekday","month","toLocaleString","day","getDate","clearInterval","_useState5","_useState6","weatherData","setWeatherData","getCurrentPosition","position","_position$coords","coords","URL","get","then","catch","error","enableHighAccuracy","timeout","maximumAge","_useState7","_useState8","setWeather","_useState9","_useState10","weatherIcon","setWeatherIcon","hour","getHours","getWeather","_ref2","getWeatherIcon","weatherIcons","Clouds","require","Rain","Windy","Snow","Array","isArray","getLocation","Promise","resolve","reject","_position$coords2","_ref3","_yield$getLocation","_useState11","_useState12","temperature","setTemperature","navigator","geolocation","_ref4","_position$coords3","temp","_x3","style","styles","backgroundImage","source","children","Datecontainer","DateText","CurrentLocation","CurrentLocationText","name","weatherImage","width","height","weatherImageText","tempText","create","flex","alignItems","justifyContent","paddingTop","fontFamily","fontSize","color","fontStyle","fontWeight","textAlign","fontVariant","marginTop"],"sources":["F:/Weather-App/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ImageBackground, StyleSheet, Text, View, Image } from \"react-native\";\nimport axios from \"axios\";\nimport Geolocation from \"@react-native-community/geolocation\";\n\nexport default function App() {\n  \n  const fetchWeatherData = async (latitude, longitude) => {\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data)\n    const weather = data.weather[0].main;\n    return weather;\n  };\n\n  // Day, Date, Month Fetch Function Starts\n\n  const [currentDay, setCurrentDay] = useState(\"\");\n  const [currentDate, setCurrentDate] = useState(\"\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const dateObj = new Date();\n      setCurrentDay(dateObj.toLocaleDateString(\"en-US\", { weekday: \"long\" }));\n      const month = dateObj.toLocaleString(\"default\", { month: \"long\" });\n      const day = dateObj.getDate();\n      setCurrentDate(`${day} ${month}`);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Day, Date, Month Fetch Function Ends\n\n  // API KEY INFO Starts\n\n  const API_KEY = \"fde70b7b510d418c6126c7433ab077c4\";\n\n  // API KEY INFO Ends\n\n  // Location Fetching Starts\n\n  const [weatherData, setWeatherData] = useState(null);\n\n  useEffect(() => {\n    Geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        const URL = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`;\n        axios\n          .get(URL)\n          .then((response) => {\n            setWeatherData(response.data);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      },\n      (error) => {\n        console.log(error);\n      },\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n    );\n  }, []);\n\n  // Location Fetching Ends\n\n  // Weather Data Fetching Starts\n\n  const [weather, setWeather] = useState(null);\n  const [weatherIcon, setWeatherIcon] = useState(null);\n\n  useEffect(() => {\n    const dateObj = new Date();\n    const hour = dateObj.getHours();\n    const getWeather = async () => {\n      const data = await fetchWeatherData();\n      setWeather(data);\n    };\n    getWeather();\n    setWeatherIcon(getWeatherIcon(weather, hour));\n  }, []);\n\n  // Weather Data Fetching Ends\n\n  //Wether Conditiion Image Fetching Starts\n\n  function getWeatherIcon(weather, hour) {\n    const weatherIcons = {\n      Clouds: [\n        require(\"./assets/Sunny.png\"),\n        require(\"./assets/ClearNight.png\"),\n      ],\n      // Clouds: require(\"./assets/Cloudy.png\"),\n      Rain: require(\"./assets/Rainy.png\"),\n      Windy: require(\"./assets/Windy.png\"),\n      Snow: require(\"./assets/Snowy.png\"),\n    };\n\n    if (Array.isArray(weatherIcons[weather])) {\n      if (hour >= 18 || hour <= 6)\n        return weatherIcons[weather][1];\n      return weatherIcons[weather][0];\n    }\n    return weatherIcons[weather];\n  }\n\n  //Wether Conditiion Image Fetching Ends\n\n  //Weather Condition Fetching Starts\n  const getLocation = () => {\n    return new Promise((resolve, reject) => {\n      Geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          resolve({ latitude, longitude });\n        },\n        (error) => {\n          reject(error);\n        },\n        { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }\n      );\n    });\n  };\n\n  useEffect(() => {\n    const getWeather = async () => {\n      try {\n        const { latitude, longitude } = await getLocation();\n        const data = await fetchWeatherData(latitude, longitude);\n        setWeather(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getWeather();\n  }, []);\n\n  //Weather Condition Fetching ends\n\n  // Temperature Fetch By Location Starts\n\n  const [temperature, setTemperature] = useState(null);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      const { latitude, longitude } = position.coords;\n      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setTemperature(data.main.temp);\n    });\n  }, []);\n\n  // Temperature Fetch By Location Ends\n\n  // MAIN RENDER FUNCTION STARTS\n\n  return (\n    <ImageBackground\n      style={styles.backgroundImage}\n      source={require(\"./assets/BG_Gradient.png\")}\n    >\n      <View style={styles.Datecontainer}>\n        <Text>\n          <Text style={styles.DateText}>\n            {currentDay}, {currentDate}\n          </Text>\n        </Text>\n      </View>\n      <View>\n        {weatherData ? (\n          <View style={styles.CurrentLocation}>\n            <Text style={styles.CurrentLocationText}>{weatherData.name}</Text>\n          </View>\n        ) : (\n          <Text style={styles.CurrentLocationText}>Loading...</Text>\n        )}\n      </View>\n      <View style={styles.weatherImage}>\n        <View>\n          <Image source={weatherIcon} style={{ width: 150, height: 150 }} />\n        </View>\n        <Text style={styles.weatherImageText}> {weather}</Text>\n      </View>\n      <View style={styles.temp}>\n        <Text style={styles.tempText}>\n          {temperature ? `${temperature}°C` : \"Loading...\"}\n        </Text>\n      </View>\n    </ImageBackground>\n  );\n}\n\n// MAIN RENDER FUNCTION ENDS\n\n// STYLESHEET STARTS\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n  },\n\n  Datecontainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"7rem\",\n  },\n\n  DateText: {\n    fontFamily: \"Montserrat\",\n    fontSize: \"1.75rem\",\n    color: \"#f1f1f1\",\n    fontStyle: \"italic\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n\n  CurrentLocation: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"1rem\",\n  },\n\n  CurrentLocationText: {\n    fontFamily: \"Montserrat\",\n    fontSize: \"1.5rem\",\n    fontVariant: [\"small-caps\"],\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n  },\n\n  weatherImage: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"2rem\",\n  },\n  weatherImageText: {\n    fontSize: \"1.5rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"500\",\n    textAlign: \"center\",\n    paddingTop: \"1rem\",\n  },\n  temp: {\n    marginTop: \"1rem\",\n  },\n  tempText: {\n    fontSize: \"4rem\",\n    fontFamily: \"Montserrat\",\n    color: \"#f1f1f1\",\n    fontWeight: \"100\",\n    textAlign: \"center\",\n  },\n});\n\n// STYLESHEET ENDS\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}